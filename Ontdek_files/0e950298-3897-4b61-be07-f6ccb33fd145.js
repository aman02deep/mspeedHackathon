// Copyright 2006-2017 ClickTale Ltd., US Patent Pending
// Generated on: 4/25/2017 9:55:03 AM (UTC 4/25/2017 2:55:03 PM)

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
	
ClickTaleGlobal.init = ClickTaleGlobal.init || {};
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["gPNNVhus"];
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.hostname.toLowerCase().replace(/^((www)?\.)/i, ""));
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};
ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'devINT_ZIGGO-179')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2017 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 64\r\n\/\/ WR destination: www26\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\/\/ Generated on: 4\/25\/2017 9:55:03 AM (UTC 4\/25\/2017 2:55:03 PM)\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    window.ClickTaleGlobal = window.ClickTaleGlobal || {};\r\n    ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\nfunction ClickTaleCDNHTTPSRewrite(u)\r\n{\r\n\ttry\r\n\t{\r\n\t\tvar scripts = document.getElementsByTagName(\u0027script\u0027);\r\n\t\tif(scripts.length)\r\n\t\t{\r\n\t\t\tvar script = scripts[ scripts.length - 1 ], s=\u0027https:\/\/clicktalecdn.sslcs.cdngc.net\/\u0027;\r\n\t\t\tif(script.src \u0026\u0026 script.src.substr(0,s.length)==s )\r\n\t\t\t\treturn u.replace(\u0027https:\/\/cdnssl.clicktale.net\/\u0027,s);\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t}\r\n\treturn u;\r\n} \r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\nvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\npccScriptElement.type = \"text\/javascript\";\r\npccScriptElement.src = (document.location.protocol==\u0027https:\u0027?\r\nClickTaleCDNHTTPSRewrite(\u0027https:\/\/cdnssl.clicktale.net\/www26\/pcc\/0e950298-3897-4b61-be07-f6ccb33fd145.js?DeploymentConfigName=devINT_ZIGGO-179\u0026Version=1\u0027):\r\n\u0027http:\/\/cdn.clicktale.net\/www26\/pcc\/0e950298-3897-4b61-be07-f6ccb33fd145.js?DeploymentConfigName=devINT_ZIGGO-179\u0026Version=1\u0027);\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\r\nif (typeof window.ClickTaleScriptSource == \u0027undefined\u0027) {\r\n\twindow.ClickTaleScriptSource=(document.location.protocol==\u0027https:\u0027\r\n\t\t?ClickTaleCDNHTTPSRewrite(\u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027)\r\n\t\t:\u0027http:\/\/cdn.clicktale.net\/www\/\u0027);\r\n}\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 8\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\nwindow.ClickTaleUIDCookieName = \u0027WRUIDAWS20170418\u0027;\r\n\r\nfunction deleteIrrelevantUIDCookies(relevant) {\r\n    var cookieArray = document.cookie.replace(\/\\s+\/g, \u0027\u0027).split(\";\");\r\n    var hostArray = location.host.split(\u0027.\u0027);\r\n    var topDom = (hostArray.length \u003c= 2 ? location.host : hostArray.slice(1).join(\u0027.\u0027));\r\n    for (var i = 0; i \u003c cookieArray.length; i++) {\r\n        var currentCookie = cookieArray[i];\r\n        var cookieKey = currentCookie.substring(0, currentCookie.indexOf(\u0027=\u0027));\r\n        if (cookieKey.indexOf(\u0027WRUID\u0027) \u003e -1 \u0026\u0026 relevant.indexOf(cookieKey) == -1) {\r\n            document.cookie = cookieKey + \"=\u0027\u0027;domain=.\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n            document.cookie = cookieKey + \"=\u0027\u0027;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n        }\r\n    }\r\n}\r\ndeleteIrrelevantUIDCookies([window.ClickTaleUIDCookieName]);\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 10) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    }\r\n\t\telse {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Protocol = {\r\n    Method: \"ImpactRecorder\"\r\n};\r\n\r\nwindow.ClickTaleSettings.Proxy = {\r\n    WR: \"ir-ing-district.clicktale.net\/ctn_v2\/\",\r\n    ImageFlag: \"ir-ing-district.clicktale.net\/ctn_v2\/\"\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027textarea,#lpChat .lp_top-text,#lpChat .lp_title_text,#lpChat .lp_sender, #lpChat .lp_title_text span, #lpChat .lp_agent_is_typing,#lpChat .lpview_form_textarea\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n(function() {\r\n    if (typeof window.ClicktalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClicktalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClicktalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClicktalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function(node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        var nodeName = child.nodeName.toLowerCase();\r\n        if (nodeName == \u0027script\u0027) {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n\t\t\t\telse if (window.ClickTaleSettings.PTC.cloneNodeIE9.badEls[nodeName]) {\r\n            var newN = document.createElement(nodeName);\r\n            var attributes = child.attributes;\r\n            var attrLength = attributes.length;\r\n            for (var i = 0; i \u003c attrLength; i++) {\r\n                var attr = attributes[i];\r\n                if (!\/[\u0027\"{}]\/.test(attr.nodeName)) {\r\n                    newN.setAttribute(\u0027ctdep-\u0027 + attr.nodeName, attr.nodeValue);\r\n                }\r\n            }\r\n            clone.appendChild(newN);\r\n        }\r\n\t\t\t\telse {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n    return clone;\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9.badEls = {\r\n    \u0027iframe\u0027: true,\r\n    \u0027img\u0027: true,\r\n    \u0027source\u0027: true\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n                changeMonitor.exclude(\u0027div.lgi-stepplan-progress-bar\u0027);\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000,\r\n                Before: [function(mutations) {\r\n                    if (typeof ClickTaleSettings.PTC.CMBeforeFilter === \u0027function\u0027) {\r\n                        return ClickTaleSettings.PTC.CMBeforeFilter(mutations);\r\n                    }\r\n                    return true;\r\n                }]\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function(attr) {\r\n                                return function(el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function() {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function(el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function(child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function(m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen = function(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 1000;\r\n    if (typeof times == \"undefined\") times = 20;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function() {\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    \/\/Google Optimize 360 Integration Start\r\n    function clickTaleGO360Integration() {\r\n        for (var i in gaData) {\r\n            if (gaData.hasOwnProperty(i)) {\r\n                var gaDataIexperiments;\r\n                if (gaDataIexperiments = gaData[i][\u0027experiments\u0027]) {\r\n                    for (var experiment in gaDataIexperiments) {\r\n                        if (gaDataIexperiments.hasOwnProperty(experiment) \u0026\u0026 experiment.length \u003e -1) {\r\n                            ClickTaleEvent(\"Experiment: \" + experiment + \" | Variant: \" + gaDataIexperiments[experiment])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function clickTaleCheckIfGO360Exists() {\r\n        if (typeof gaData !== \u0027undefined\u0027 \u0026\u0026 gaData != null \u0026\u0026 typeof gaData === \u0027object\u0027) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleGO360Integration, clickTaleCheckIfGO360Exists, 100, 60);\r\n    \/\/Google Optimize 360 Integration End\r\n\r\n    \/\/Usabilla Integration\r\n    if (typeof usabilla_live !== \u0027undefined\u0027) {\r\n        window.usabilla_live(\"setIntegrationData\", {\r\n            \"clicktale\": {\r\n                \"UID\": ClickTaleGetUID(),\r\n                \"SID\": ClickTaleGetSID(),\r\n                \"PID\": ClickTaleGetPID()\r\n            }\r\n        });\r\n    }\r\n\r\n\t\t\/\/LiveEngage Integration\r\n\t\tfunction ctReadCookie(name) {\r\n\t\t    var nameEQ = name + \"=\";\r\n\t\t    var ca = document.cookie.split(\u0027;\u0027);\r\n\t\t    for (var i = 0; i \u003c ca.length; i++) {\r\n\t\t        var c = ca[i];\r\n\t\t        while (c.charAt(0) == \u0027 \u0027) c = c.substring(1, c.length);\r\n\t\t        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n\t\t    }\r\n\t\t    return null;\r\n\t\t};\r\n\r\n\t\tfunction clickTaleLiveEngageIntegration() {\r\n\t\t    var ctCheckCookie = ctReadCookie(\"CTLPIntegration\")\r\n\t\t    if (ctCheckCookie == null) {\r\n\t\t        document.cookie = \"CTLPIntegration=CHAT_STATUS; path=\/\";\r\n\t\t        recordingURL = \"https:\/\/dmz01.app.clicktale.com\/Player2.aspx?PID=\" + ClickTaleGetPID() + \"\u0026UID=\" + ClickTaleGetUID().split(\u0027.\u0027)[0] + \"\u0026SID=\" + ClickTaleGetSID()\r\n\t\t        lpTag.sdes = lpTag.sdes || [];\r\n\t\t        lpTag.sdes.push({\r\n\t\t            \"type\": \"ctmrinfo\",\r\n\t\t            \"info\": {\r\n\t\t                \"socialId\": recordingURL\r\n\t\t            }\r\n\t\t        });\r\n\t\t        ClickTaleEvent(\"LiveEngage Chat Started\")\r\n\t\t        ClickTaleStop();\r\n\t\t        ClickTaleUploadPage();\r\n\t\t        ClickTaleLogical();\r\n\t\t    }\r\n\t\t};\r\n\r\n\t\tfunction clickTaleCheckLPChatStatus() {\r\n\t\t    lpTag.events.bind({\r\n\t\t        appName: \"lpUnifiedWindow\",\r\n\t\t        eventName: \"engagementData\",\r\n\t\t        state: \"chatting\",\r\n\t\t        async: true,\r\n\t\t        func: clickTaleLiveEngageIntegration\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\tfunction clickTaleCheckIfLPCTExists() {\r\n\t\t    if (window[\u0027lpTag\u0027] \u0026\u0026 typeof lpTag == \"object\" \u0026\u0026 typeof ClickTaleIsRecording == \u0027function\u0027) {\r\n\t\t        return ClickTaleIsRecording();\r\n\t\t    }\r\n\t\t    return false;\r\n\t\t};\r\n\r\n\t\twindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleCheckLPChatStatus, clickTaleCheckIfLPCTExists, 100, 60);\r\n\t\t\/\/End LiveEngage Integration\r\n};\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=64, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www26\",\r\n\t\tSubsId=233177;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        \/\/Google Optimize 360 Integration\r\n        if (window.ClickTaleSettings.PTC.isReadyToRecordNotDelayed) {\r\n            setTimeout(function() {\r\n                ClickTaleUploadPageNow();\r\n            }, 2000);\r\n        }\r\n        else {\r\n            ClickTaleUploadPageNow();\r\n        }\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (\/\\\/shop\\\/checkout\\\/stepOne\/i.test(window.location.pathname) ||\r\n            \/\\\/shop\\\/checkout\\\/stepTwo\/i.test(window.location.pathname) ||\r\n            \/\\\/shop\\\/checkout\\\/stepThree\/i.test(window.location.pathname)) {\r\n\r\n            if (document.querySelectorAll(\u0027[class*=\"formNavPos\"] .goback\u0027).length \u003e 0)\r\n                return true;\r\n        }\r\n        else {\r\n            \/\/Google Optimize 360 Integration\r\n            window.ClickTaleSettings.PTC.isReadyToRecordNotDelayed = true;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 450, 20, doUpload);\r\n\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n};\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\"),\r\n\t\twrSrc = (document.location.protocol==\u0027https:\u0027 ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027) + \u0027tc\/WR-latest.js\u0027;\r\n\twrScript.src = (window.ClickTaleCDNHTTPSRewrite ? ClickTaleCDNHTTPSRewrite(wrSrc) : wrSrc);\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),i=!1,a=t.origin;try{e=JSON.parse(t.data)}catch(l){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(i=!0),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026n(a,i))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var c;c=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=c,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}try{var c=window.chrome,i=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===i\u0026\u0026t()}catch(a){}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2017 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 64\r\n\/\/ WR destination: www26\r\n\/\/ WR version: latest\r\n\/\/ Recording ratio: 1\r\n\/\/ Generated on: 4\/25\/2017 9:55:03 AM (UTC 4\/25\/2017 2:55:03 PM)\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    window.ClickTaleGlobal = window.ClickTaleGlobal || {};\r\n    ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\nfunction ClickTaleCDNHTTPSRewrite(u)\r\n{\r\n\ttry\r\n\t{\r\n\t\tvar scripts = document.getElementsByTagName(\u0027script\u0027);\r\n\t\tif(scripts.length)\r\n\t\t{\r\n\t\t\tvar script = scripts[ scripts.length - 1 ], s=\u0027https:\/\/clicktalecdn.sslcs.cdngc.net\/\u0027;\r\n\t\t\tif(script.src \u0026\u0026 script.src.substr(0,s.length)==s )\r\n\t\t\t\treturn u.replace(\u0027https:\/\/cdnssl.clicktale.net\/\u0027,s);\r\n\t\t}\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t}\r\n\treturn u;\r\n} \r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\r\n{\r\n\tClickTaleCreateDOMElement = function(tagName)\r\n\t{\r\n\t\tif (document.createElementNS)\r\n\t\t{\r\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\r\n\t\t}\r\n\t\treturn document.createElement(tagName);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleAppendInHead) != \"function\")\r\n{\r\n\tClickTaleAppendInHead = function(element)\r\n\t{\r\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\r\n\t\tparent.appendChild(element);\r\n\t}\r\n}\r\n\r\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\r\n{\r\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\r\n\t{\r\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\r\n\t\tscript.text = code;\r\n\t\treturn script;\r\n\t}\r\n}\t\r\n\r\nvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\npccScriptElement.type = \"text\/javascript\";\r\npccScriptElement.src = (document.location.protocol==\u0027https:\u0027?\r\nClickTaleCDNHTTPSRewrite(\u0027https:\/\/cdnssl.clicktale.net\/www26\/pcc\/0e950298-3897-4b61-be07-f6ccb33fd145.js?DeploymentConfigName=Release_20170419\u0026Version=1\u0027):\r\n\u0027http:\/\/cdn.clicktale.net\/www26\/pcc\/0e950298-3897-4b61-be07-f6ccb33fd145.js?DeploymentConfigName=Release_20170419\u0026Version=1\u0027);\r\nClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\r\n\t\r\nif (typeof window.ClickTaleScriptSource == \u0027undefined\u0027) {\r\n\twindow.ClickTaleScriptSource=(document.location.protocol==\u0027https:\u0027\r\n\t\t?ClickTaleCDNHTTPSRewrite(\u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027)\r\n\t\t:\u0027http:\/\/cdn.clicktale.net\/www\/\u0027);\r\n}\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 8\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UseTransport = true;\r\nwindow.ClickTaleUIDCookieName = \u0027WRUIDAWS20170418\u0027;\r\n\r\nfunction deleteIrrelevantUIDCookies(relevant) {\r\n    var cookieArray = document.cookie.replace(\/\\s+\/g, \u0027\u0027).split(\";\");\r\n    var hostArray = location.host.split(\u0027.\u0027);\r\n    var topDom = (hostArray.length \u003c= 2 ? location.host : hostArray.slice(1).join(\u0027.\u0027));\r\n    for (var i = 0; i \u003c cookieArray.length; i++) {\r\n        var currentCookie = cookieArray[i];\r\n        var cookieKey = currentCookie.substring(0, currentCookie.indexOf(\u0027=\u0027));\r\n        if (cookieKey.indexOf(\u0027WRUID\u0027) \u003e -1 \u0026\u0026 relevant.indexOf(cookieKey) == -1) {\r\n            document.cookie = cookieKey + \"=\u0027\u0027;domain=.\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n            document.cookie = cookieKey + \"=\u0027\u0027;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;\";\r\n        }\r\n    }\r\n}\r\ndeleteIrrelevantUIDCookies([window.ClickTaleUIDCookieName]);\r\n\r\nwindow.ClickTaleSettings.CheckAgentSupport = function(f, v) {\r\n    if (v.t == v.IE \u0026\u0026 v.v \u003c= 10) {\r\n        window.ClickTaleSettings.PTC.okToRunPCC = false;\r\n        return false;\r\n    }\r\n\t\telse {\r\n        if (!(v.t == v.IE \u0026\u0026 v.v \u003c= 10)) {\r\n            window.ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n            window.ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n        }\r\n        var fv = f(v);\r\n        window.ClickTaleSettings.PTC.okToRunPCC = fv;\r\n        return fv;\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Protocol = {\r\n    Method: \"ImpactRecorder\"\r\n};\r\n\r\nwindow.ClickTaleSettings.Proxy = {\r\n    WR: \"ir-ing-district.clicktale.net\/ctn_v2\/\",\r\n    ImageFlag: \"ir-ing-district.clicktale.net\/ctn_v2\/\"\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObj = [{\r\n    selector: \"input[type=\\\"text\\\"], input[type=\\\"tel\\\"], input[type=\\\"email\\\"]\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: false\r\n    }\r\n}, {\r\n    selector: \".ctHidden\",\r\n    changeMon: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: [\u0027value\u0027],\r\n        Text: true\r\n    }\r\n}, {\r\n    selector: \u0027textarea,#lpChat .lp_top-text,#lpChat .lp_title_text,#lpChat .lp_sender, #lpChat .lp_title_text span, #lpChat .lp_agent_is_typing,#lpChat .lpview_form_textarea\u0027,\r\n    changeMon: {\r\n        Attributes: false,\r\n        Text: true\r\n    },\r\n    rewriteApi: {\r\n        Attributes: false,\r\n        Text: true\r\n    }\r\n}];\r\n\r\nwindow.ClickTaleSettings.PTC.RulesObjRemoveEls = [];\r\n(function() {\r\n    if (typeof window.ClicktalePIISelector === \u0027string\u0027 \u0026\u0026 window.ClicktalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelectorAll(window.ClicktalePIISelector);\r\n            if (domNodes) {\r\n                window.ClickTaleSettings.PTC.RulesObj.push({\r\n                    selector: window.ClicktalePIISelector,\r\n                    changeMon: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    },\r\n                    rewriteApi: {\r\n                        Attributes: [\u0027value\u0027],\r\n                        Text: true\r\n                    }\r\n                });\r\n            }\r\n        } catch (err) {}\r\n    }\r\n})();\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9 = function(node) {\r\n    var clone = node.nodeType === 3 ? document.createTextNode(node.nodeValue) : node.cloneNode(false);\r\n    var child = node.firstChild;\r\n    while (child) {\r\n        var nodeName = child.nodeName.toLowerCase();\r\n        if (nodeName == \u0027script\u0027) {\r\n            var script = document.createElement(\u0027script\u0027);\r\n            clone.appendChild(script);\r\n        }\r\n\t\t\t\telse if (window.ClickTaleSettings.PTC.cloneNodeIE9.badEls[nodeName]) {\r\n            var newN = document.createElement(nodeName);\r\n            var attributes = child.attributes;\r\n            var attrLength = attributes.length;\r\n            for (var i = 0; i \u003c attrLength; i++) {\r\n                var attr = attributes[i];\r\n                if (!\/[\u0027\"{}]\/.test(attr.nodeName)) {\r\n                    newN.setAttribute(\u0027ctdep-\u0027 + attr.nodeName, attr.nodeValue);\r\n                }\r\n            }\r\n            clone.appendChild(newN);\r\n        }\r\n\t\t\t\telse {\r\n            clone.appendChild(window.ClickTaleSettings.PTC.cloneNodeIE9(child));\r\n        }\r\n        child = child.nextSibling;\r\n    }\r\n    return clone;\r\n}\r\n\r\nwindow.ClickTaleSettings.PTC.cloneNodeIE9.badEls = {\r\n    \u0027iframe\u0027: true,\r\n    \u0027img\u0027: true,\r\n    \u0027source\u0027: true\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.ConfigChangeMonitor = function() {\r\n\r\n    if (window.ClickTaleSettings.PTC.EnableChangeMonitor) {\r\n        window.ClickTaleSettings.XHRWrapper = {\r\n            Enable: false\r\n        };\r\n\r\n        var script = document.createElement(\"SCRIPT\");\r\n        script.src = (document.location.protocol === \"https:\" ? \"https:\/\/cdnssl.\" : \"http:\/\/cdn.\") + \"clicktale.net\/www\/ChangeMonitor-latest.js\";\r\n        document.body.appendChild(script);\r\n\r\n        window.ClickTaleSettings.ChangeMonitor = {\r\n            Enable: true,\r\n            AddressingMode: \"id\",\r\n            OnReadyHandler: function(changeMonitor) {\r\n                changeMonitor.observe();\r\n                changeMonitor.exclude(\u0027div.lgi-stepplan-progress-bar\u0027);\r\n                var CMRemrule = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (CMRemrule) {\r\n                    for (var i = 0; i \u003c CMRemrule.length; i++) {\r\n                        var rule = CMRemrule[i];\r\n                        var CMlocation = rule[\u0027location\u0027];\r\n                        if ((!CMlocation || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1))) {\r\n                            if (rule.changeMon) {\r\n                                changeMonitor.exclude(rule.changeMon);\r\n                            }\r\n                            if (rule.changeMonLive) {\r\n                                changeMonitor.exclude({\r\n                                    selector: rule.changeMonLive,\r\n                                    multiple: true\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            OnBeforeReadyHandler: function(settings) {\r\n                settings.Enable = window.ClickTaleGetUID ? !!ClickTaleGetUID() : false;\r\n                return settings;\r\n            },\r\n            Filters: {\r\n                MaxBufferSize: 300000,\r\n                MaxElementCount: 3000,\r\n                Before: [function(mutations) {\r\n                    if (typeof ClickTaleSettings.PTC.CMBeforeFilter === \u0027function\u0027) {\r\n                        return ClickTaleSettings.PTC.CMBeforeFilter(mutations);\r\n                    }\r\n                    return true;\r\n                }]\r\n            },\r\n            PII: {\r\n                Text: [],\r\n                Attributes: []\r\n            }\r\n        }\r\n        var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n        if (RulesObj) {\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Text = window.ClickTaleSettings.ChangeMonitor.PII.Text || [];\r\n            window.ClickTaleSettings.ChangeMonitor.PII.Attributes = window.ClickTaleSettings.ChangeMonitor.PII.Attributes || [];\r\n            for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                var CMrule = RulesObj[i][\u0027changeMon\u0027];\r\n                var CMlocation = RulesObj[i][\u0027location\u0027];\r\n                if (!CMrule || (CMlocation \u0026\u0026 document.location[CMlocation[\u0027prop\u0027]].toLowerCase().search(CMlocation.search) === -1)) {\r\n                    continue;\r\n                }\r\n                var selector = RulesObj[i][\u0027selector\u0027];\r\n                var attributesArr = CMrule.Attributes;\r\n                if (attributesArr instanceof Array) {\r\n                    for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                        var attr = attributesArr[u];\r\n                        window.ClickTaleSettings.ChangeMonitor.PII.Attributes.push({\r\n                            selector: selector,\r\n                            transform: (function(attr) {\r\n                                return function(el) {\r\n                                    var attrs = el.attributes;\r\n                                    var attrsToReturn = {}\r\n                                    for (var i = 0; i \u003c attrs.length; i++) {\r\n                                        var name = attrs[i].nodeName;\r\n                                        attrsToReturn[name] = attrs[i].nodeValue;\r\n                                    }\r\n                                    var attrib = el.getAttribute(attr);;\r\n                                    if (typeof attrib === \u0027string\u0027) {\r\n                                        attrsToReturn[attr] = attrib.replace(\/\\w\/g, \u0027-\u0027);\r\n                                    }\r\n                                    return attrsToReturn;\r\n                                }\r\n                            })(attr)\r\n                        });\r\n                    }\r\n                }\r\n                if (CMrule.Text) {\r\n                    window.ClickTaleSettings.ChangeMonitor.PII.Text.push({\r\n                        selector: selector,\r\n                        transform: function(el) {\r\n                            return el.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Compression = {\r\n    Method: function() {\r\n        return \"deflate\";\r\n    }\r\n};\r\n\r\nwindow.ClickTaleSettings.Transport = {\r\n    Legacy: false,\r\n    MaxConcurrentRequests: 5\r\n};\r\n\r\nwindow.ClickTaleSettings.RewriteRules = {\r\n    OnBeforeRewrite: function(rewriteApi) {\r\n        var bodyClone = ((document.documentMode \u0026\u0026 document.documentMode \u003c= 9) ? ClickTaleSettings.PTC.cloneNodeIE9(document.body) : document.body.cloneNode(true));\r\n\r\n        if (window.ClickTaleSettings.PTC.RulesObj) {\r\n            rewriteApi.add(function(buffer) {\r\n\r\n                var RulesObj = window.ClickTaleSettings.PTC.RulesObj;\r\n                for (var i = 0; i \u003c RulesObj.length; i++) {\r\n                    var rewriteApirule = RulesObj[i][\u0027rewriteApi\u0027];\r\n                    var rewriteApilocation = RulesObj[i][\u0027location\u0027];\r\n                    if (!rewriteApirule || (rewriteApilocation \u0026\u0026 document.location[rewriteApilocation[\u0027prop\u0027]].toLowerCase().search(rewriteApilocation.search) === -1)) {\r\n                        continue;\r\n                    }\r\n                    var selector = RulesObj[i][\u0027selector\u0027];\r\n                    var elements = bodyClone.querySelectorAll(selector);\r\n\r\n                    Array.prototype.forEach.call(elements, function(el, ind) {\r\n                        var attributesArr = rewriteApirule.Attributes;\r\n                        if (attributesArr instanceof Array) {\r\n\r\n                            for (var u = 0; u \u003c attributesArr.length; u++) {\r\n                                var attr = attributesArr[u];\r\n                                var attrib = el.getAttribute(attr);\r\n                                if (typeof attrib === \u0027string\u0027) {\r\n                                    el.setAttribute(attr, attrib.replace(\/\\w\/g, \u0027-\u0027));\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                        if (rewriteApirule.Text) {\r\n                            var children = el.childNodes;\r\n                            Array.prototype.forEach.call(children, function(child) {\r\n                                if (child \u0026\u0026 child.nodeType === 3) {\r\n                                    child.textContent = child.textContent.replace(\/\\w\/g, \u0027-\u0027);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                \/\/work on body\r\n                var RulesObjRemoveEls = window.ClickTaleSettings.PTC.RulesObjRemoveEls;\r\n                if (RulesObjRemoveEls) {\r\n                    for (var i = 0; i \u003c RulesObjRemoveEls.length; i++) {\r\n                        if (RulesObjRemoveEls[i].rewriteApi) {\r\n                            var elementsToRemove = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApi);\r\n                            Array.prototype.forEach.call(elementsToRemove, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    el.parentNode.removeChild(el);\r\n                                }\r\n                            });\r\n                        }\r\n                        if (RulesObjRemoveEls[i].rewriteApiReplace) {\r\n                            var elementsToReplace = bodyClone.querySelectorAll(RulesObjRemoveEls[i].rewriteApiReplace);\r\n                            Array.prototype.forEach.call(elementsToReplace, function(el, ind) {\r\n                                if (el.parentNode) {\r\n                                    var comment = document.createComment(el.outerHTML);\r\n                                    el.parentNode.replaceChild(comment, el);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                buffer = buffer.replace(\/(\u003cbody[^\u003e]*\u003e)[\\s\\S]*?\u003c\\\/body\u003e\/gi, function(m, g1) {\r\n                    if (g1) {\r\n                        return g1 + bodyClone.innerHTML.replace(\/\u003cscript\\b([^\u003e]*)\u003e([\\s\\S]*?)\u003c\\\/script\u003e\/gi, \u0027\u003cscript\u003e\u003c\\\/script\u003e\u0027).replace(\/(\u003cdiv id=\"?ClickTaleDiv\"?[^\u003e]+\u003e)\\s*\u003cscript[^\u003e]+\u003e\u003c\\\/script\u003e\\s*(\u003c\\\/div\u003e)\/i, \u0027$1$2\u0027) + \u0027\u003c\\\/body\u003e\u0027;\r\n                    }\r\n                    return m;\r\n                });\r\n\r\n                return buffer;\r\n            });\r\n        }\r\n        rewriteApi.add({\r\n            pattern: \/(\u003chead[^\u003e]*\u003e)\/i,\r\n            replace: \u0027$1\u003cscript type=\"text\\\/javascript\" class=\"cm-ignore\" src=\"http:\\\/\\\/dummytest.clicktale-samples.com\\\/GlobalResources\\\/jquery.js\"\u003e\u003c\\\/script\u003e\u0027\r\n        });\r\n    }\r\n};\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    \/\/Usabilla Integration\r\n    if (typeof usabilla_live !== \u0027undefined\u0027) {\r\n        window.usabilla_live(\"setIntegrationData\", {\r\n            \"clicktale\": {\r\n                \"UID\": ClickTaleGetUID(),\r\n                \"SID\": ClickTaleGetSID(),\r\n                \"PID\": ClickTaleGetPID()\r\n            }\r\n        });\r\n    }\r\n\r\n\t\t\/\/LiveEngage Integration\r\n\t\tfunction ctReadCookie(name) {\r\n\t\t    var nameEQ = name + \"=\";\r\n\t\t    var ca = document.cookie.split(\u0027;\u0027);\r\n\t\t    for (var i = 0; i \u003c ca.length; i++) {\r\n\t\t        var c = ca[i];\r\n\t\t        while (c.charAt(0) == \u0027 \u0027) c = c.substring(1, c.length);\r\n\t\t        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n\t\t    }\r\n\t\t    return null;\r\n\t\t};\r\n\r\n\t\tfunction clickTaleLiveEngageIntegration() {\r\n\t\t    var ctCheckCookie = ctReadCookie(\"CTLPIntegration\")\r\n\t\t    if (ctCheckCookie == null) {\r\n\t\t        document.cookie = \"CTLPIntegration=CHAT_STATUS; path=\/\";\r\n\t\t        recordingURL = \"https:\/\/dmz01.app.clicktale.com\/Player2.aspx?PID=\" + ClickTaleGetPID() + \"\u0026UID=\" + ClickTaleGetUID().split(\u0027.\u0027)[0] + \"\u0026SID=\" + ClickTaleGetSID()\r\n\t\t        lpTag.sdes = lpTag.sdes || [];\r\n\t\t        lpTag.sdes.push({\r\n\t\t            \"type\": \"ctmrinfo\",\r\n\t\t            \"info\": {\r\n\t\t                \"socialId\": recordingURL\r\n\t\t            }\r\n\t\t        });\r\n\t\t        ClickTaleEvent(\"LiveEngage Chat Started\")\r\n\t\t        ClickTaleStop();\r\n\t\t        ClickTaleUploadPage();\r\n\t\t        ClickTaleLogical();\r\n\t\t    }\r\n\t\t};\r\n\r\n\t\tfunction clickTaleCheckLPChatStatus() {\r\n\t\t    lpTag.events.bind({\r\n\t\t        appName: \"lpUnifiedWindow\",\r\n\t\t        eventName: \"engagementData\",\r\n\t\t        state: \"chatting\",\r\n\t\t        async: true,\r\n\t\t        func: clickTaleLiveEngageIntegration\r\n\t\t    });\r\n\t\t};\r\n\r\n\t\tfunction clickTaleCheckIfLPCTExists() {\r\n\t\t    if (window[\u0027lpTag\u0027] \u0026\u0026 typeof lpTag == \"object\" \u0026\u0026 typeof ClickTaleIsRecording == \u0027function\u0027) {\r\n\t\t        return ClickTaleIsRecording();\r\n\t\t    }\r\n\t\t    return false;\r\n\t\t};\r\n\r\n\t\tfunction clickTaleDoUntilLPExists(toDoHandler, toCheckHandler, interval, times) {\r\n\t\t    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n\t\t    if (typeof interval == \"undefined\") interval = 1000;\r\n\t\t    if (typeof times == \"undefined\") times = 20;\r\n\t\t    if (--times \u003c 0) {\r\n\t\t        return;\r\n\t\t    }\r\n\t\t    if (toCheckHandler()) {\r\n\t\t        toDoHandler();\r\n\t\t        return;\r\n\t\t    }\r\n\t\t    setTimeout(function() {\r\n\t\t        clickTaleDoUntilLPExists(toDoHandler, toCheckHandler, interval, times);\r\n\t\t    }, interval);\r\n\t\t};\r\n\r\n\t\tclickTaleDoUntilLPExists(clickTaleCheckLPChatStatus, clickTaleCheckIfLPCTExists, 1000, 6);\r\n\t\t\/\/End LiveEngage Integration\r\n};\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=64, \r\n\t\tRatio=1, \r\n\t\tPartitionPrefix=\"www26\",\r\n\t\tSubsId=233177;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\tif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\n\r\nfunction doUpload() {\r\n    ClickTaleUploadPage();\r\n    window.ClickTaleSSL = 1;\r\n    ClickTale(PID, Ratio, PartitionPrefix);\r\n    if ((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString())) {\r\n        ClickTalePrevOnReady();\r\n    }\r\n   \r\n}\r\nfunction isReadyToRecord() {\r\n    if (\/\\\/shop\\\/checkout\\\/stepOne\/i.test(window.location.pathname) ||\r\n        \/\\\/shop\\\/checkout\\\/stepTwo\/i.test(window.location.pathname) ||\r\n        \/\\\/shop\\\/checkout\\\/stepThree\/i.test(window.location.pathname)) {\r\n        \r\n        if (document.querySelectorAll(\u0027[class*=\"formNavPos\"] .goback\u0027).length \u003e 0)\r\n            return true;\r\n    } \r\n    return true;\r\n}\r\nfunction doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 1000;\r\n    if (typeof times == \"undefined\") times = 20;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () { doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler); }, interval);\r\n};\r\nif (typeof ClickTaleUploadPage === \u0027function\u0027 \u0026\u0026 window.ClickTaleSettings.PTC.UseTransport) {\r\n   \r\n    doOnlyWhen(doUpload, isReadyToRecord, 450, 20, doUpload);\r\n\r\n    window.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\n    window.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n        var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n        if (pcc) {\r\n            var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n            if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n                ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n                ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n            }\r\n        }\r\n    });\r\n    var initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\n    for (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n        if (typeof initFuncs[i] === \u0027function\u0027) {\r\n            initFuncs[i]();\r\n        }\r\n    }\r\n};\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\r\n\tvar wrScript = ClickTaleCreateDOMElement(\"script\"),\r\n\t\twrSrc = (document.location.protocol==\u0027https:\u0027 ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027) + \u0027tc\/WR-latest.js\u0027;\r\n\twrScript.src = (window.ClickTaleCDNHTTPSRewrite ? ClickTaleCDNHTTPSRewrite(wrSrc) : wrSrc);\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n!function(){function t(){window.addEventListener\u0026\u0026addEventListener(\"message\",e,!1)}function e(t){var e,o=new RegExp(\"(clicktale.com|qa-core.app.clicktale.com)($|:)\"),c=new RegExp(\"qa-core.app.clicktale.com\"),i=!1,a=t.origin;try{e=JSON.parse(t.data)}catch(l){return}o.test(t.origin)!==!1\u0026\u0026(window.ct_ve_parent_window=t.source,c.test(t.origin)===!0\u0026\u0026(i=!0),\"CTload_ve\"===e[\"function\"]\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026n(a,i))}function o(t){return document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",t):document.createElement(t)}function n(t,e){var n=o(\"script\");n.setAttribute(\"type\",\"text\/javascript\"),n.setAttribute(\"id\",\"ctVisualEditorClientModule\");var c;c=e?document.location.protocol+\"\/\/qa-core.app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\":document.location.protocol+\"\/\/\"+t.match(\/subs\\d*\/)[0]+\".app.clicktale.com\/VisualEditor\/Client\/dist\/veClientModule.js\",n.src=c,document.getElementById(\"ctVisualEditorClientModule\")||document.body.appendChild(n)}try{var c=window.chrome,i=window.navigator\u0026\u0026window.navigator.vendor;null!==c\u0026\u0026void 0!==c\u0026\u0026\"Google Inc.\"===i\u0026\u0026t()}catch(a){}}();");
		document.body.appendChild(script);	})();
	}
